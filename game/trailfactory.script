local broadcast = require "ludobits.m.broadcast"
local geometry = require "ludobits.m.geometry"
local flow = require "ludobits.m.flow"

go.property("interval", 0.01)

function init(self)
	self.trail = {}
	self.next = self.interval
	self.last_pos = go.get_world_position()
	self.thrusting = true
	
	broadcast.register("stalling", function()
		self.thrusting = false
	end)
	broadcast.register("not_stalling", function()
		self.thrusting = true
	end)
	
	self.trail_instance = flow(function()
		while true do
			local pos = go.get_world_position()
			if self.thrusting then
				local distance = geometry.distance(pos, self.last_pos)
				if distance == 0 then distance = 1 end
				local scale = vmath.vector3(1, distance * 0.5, 1)
				local rot = geometry.angle_towards(self.last_pos, pos)
				local id = factory.create("#factory", pos, rot, {}, scale)
				table.insert(self.trail, id)

				while #self.trail > 100 do
					go.delete(table.remove(self.trail, 1))
				end
			else
				if #self.trail > 0 then
					go.delete(table.remove(self.trail, 1))
				end
			end
			self.last_pos = pos

			flow.delay(self.interval)
		end
	end)
end

function final(self)
	while #self.trail > 0 do
		go.delete(table.remove(self.trail))
	end
	flow.stop(self.trail_instance)
	broadcast.unregister("stalling")
	broadcast.unregister("not_stalling")
end

function update(self, dt)
	flow.update(dt)
end

function on_message(self, message_id, message, sender)
	flow.on_message(message_id, message, sender)
	broadcast.on_message(message_id, message, sender)
end
